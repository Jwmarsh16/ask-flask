# .github/workflows/ci.yml
# ✅ UPDATED: add mypy step (scoped to new modules).
# ✅ TEMP: install pydantic in CI so mypy can import server/schemas now.
#          We'll fold pydantic into requirements.txt after you share it.

name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend:
    name: Backend (lint, types, tests)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install deps (runtime + dev)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install pydantic  # TEMP: ensure mypy can import server/schemas  # inline-change

      - name: Lint (ruff)
        run: ruff check .

      - name: Format check (black)
        run: black --check .

      - name: Import order check (isort)
        run: isort --check-only .

      - name: Type check (mypy)
        run: mypy server/services server/schemas  # scoped so CI is green  # inline-change

      - name: Run tests (pytest + coverage)
        run: pytest
        env:
          OPENAI_API_KEY: "test"

      - name: Upload coverage artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: ./.coverage*

  frontend:
    name: Frontend (lint, build, test)
    runs-on: ubuntu-latest
    needs: [backend]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: client/package-lock.json

      - name: Install deps
        run: npm ci --prefix client

      - name: Lint
        run: npm run lint --prefix client

      - name: Build
        run: npm run build --prefix client

      - name: Test (Vitest + coverage)
        run: npm run test:ci --prefix client

      - name: Upload frontend coverage artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: client/coverage

  summary:
    name: CI summary
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    steps:
      - run: echo "✅ Lint + mypy + tests (BE) and lint/build/tests (FE) all passed"
